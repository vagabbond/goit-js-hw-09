{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,WAAYJ,SAASC,cAAc,yBAGrC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAmBPT,EAAKC,KAAKgB,iBAAiB,UAfR,SAAAC,GACjBA,EAAMC,iBAEN,IADA,IAAIC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC1BC,EAAI,EAAGA,GAAKvB,EAAKM,WAAWgB,MAAOC,GAAK,EAC/CC,QAAQC,IAAIL,GACZb,EAAcgB,EAAGH,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OACjBX,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OAClBX,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DW,EAAQC,OAAOrB,EAAKI,WAAWkB,OAASD,OAAOrB,EAAKK,UAAUiB,OAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\r\n\r\nconst refs = {\r\n  form: document.querySelector('.form'),\r\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\r\n  inputStep: document.querySelector('input[name=\"step\"]'),\r\n  inputAmout: document.querySelector('input[name=\"amount\"]'),\r\n};\r\n\r\nfunction createPromise(position, delay) {\r\n  const shouldResolve = Math.random() > 0.3;\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (shouldResolve) {\r\n        resolve({ position, delay });\r\n      } else {\r\n        reject({ position, delay });\r\n      }\r\n    }, delay);\r\n  });\r\n}\r\n\r\nconst submitForm = event => {\r\n  event.preventDefault();\r\n  let delay = Number(refs.inputDelay.value);\r\n  for (let i = 1; i <= refs.inputAmout.value; i += 1) {\r\n    console.log(delay);\r\n    createPromise(i, delay)\r\n      .then(({ position, delay }) =>\r\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\r\n      )\r\n      .catch(({ position, delay }) =>\r\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\r\n      );\r\n    delay = Number(refs.inputDelay.value) + Number(refs.inputStep.value) * i;\r\n  }\r\n};\r\nrefs.form.addEventListener('submit', submitForm);\r\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmout","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","i","console","log","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5f81ad07.js.map"}